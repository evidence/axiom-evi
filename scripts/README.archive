                            AXIOM NIC simulation
===============================================================================

This archive contains the following files and folders:

 * Makefile
 * axiom_switch
 * qemu-system-aarch64
 * start-qemu.sh
 * images


## 1. Run simulation

In this archive there is a Makefile to run a simulator.
```
cd scripts
make VMS=<number of nodes> run
```
Example:
```
# run 4 nodes with default axiom-switch (ring topology)
make VMS=4 run
# show the log file
make log
# shutdown the vms and the switch
make stop

# run 4 nodes and show log
make VMS=4 run log
# (CTRL-C) to shutdown the vms and the switch
```



## 2. Run application inside the nodes

The AXIOM NIC device driver and the user-space
applications are compiled and installed in the nodes filesystem.

After the boot, all nodes autologin with root privileges.
Otherwise the credentials are:

 * user: root
 * password: *empty*

After the login, you must load the AXIOM NIC device driver and start the
axiom-init deamon.

```
# load device driver
modprobe axiom-netdev

# start axiom-init deamon to run the the discovery algorithm, to set the
# routing table and to handle control messages

# slaves                                 # master
axiom-init &                             axiom-init -m &
```

#### run applications in the nodes:

 * axiom-info
    + print informations (node-id, interfaces, routing, etc.) about AXIOM NIC
```
        example:
        # print all information
        axiom-info
```
```
        # print nodeid
        axiom-info -n
```
```
        # print routing table
        axiom-info -r
```
 * axiom-whoami
     + print the node-id set after the discovery phase
```
        example:
        axiom-whoami
```
 * axiom-ping
    + estimate the round trip time (RTT) between two nodes
```
        example:
        # Estimate RTT with target node 2. Send a ping message every 0.5 seconds.
        axiom-ping -d 2 -i 0.5
```
```
        # Estimante RTT with target node 2. Send 10 ping message every 0.2 seconds.
        axiom-ping -d 2 -c 10 -i 0.2
```
 * axiom-netperf
    + estimate the throughput between two nodes
```
        example:
        # Estimate the throughput with targat node 3, sending 512 KBytes of data.
        axiom-netperf -d 3 -l 512K
```
```
        # Estimate the throughput with targat node 3, sending 2 MBytes of data.
        axiom-netperf -d 3 -l 2M
```
 * axiom-traceroute
    + print the hops needed to reach a specified target node
```
        example:
        # Print the hops needed to reach the node 1
        axiom-traceroute -d 1
```
 * axiom-[send|recv]-small
     + send/receive Axiom RAW SMALL data to/from a node
```
        examples:
        # receive RAW SMALL message
        axiom-recv-small
```
```
        # send RAW SMALL data to node (node_id=4) with a specified payload
        axiom-send-small -d 4 --payload 987654
```
```
        # send RAW SMALL data to a neighbour directly connected on a local
        # interface (if_id=1) with a specified payload
        axiom-send-small -d 1 --neighbour --payload 987654
```
