#!/bin/sh
# kFreeBSD do not accept scripts as interpreters, using #!/bin/sh and sourcing.
if [ true != "$INIT_D_SCRIPT_SOURCED" ] ; then
    set "$0" "$@"; INIT_D_SCRIPT_SOURCED=true . /lib/init/init-d-script
fi
### BEGIN INIT INFO
# Provides:          axiom-prepare
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Prepare axiom environment
# Description:       To prepare the axiom environment
### END INIT INFO

# Author: Foo Bar <foobar@baz.org>
#
# Please remove the "Author" lines above and replace them
# with your own name if you copy and modify this script.

DESC="Description of the service"
DAEMON=/usr/sbin/daemonexecutablename

. /lib/init/vars.sh
. /lib/lsb/init-functions

setup() {
    # memory setup
    echo 1 > /proc/sys/vm/overcommit_memory
    echo 0 > /proc/sys/kernel/randomize_va_space
    # deadline scheduling setup
    echo -1 > /proc/sys/kernel/sched_rt_period_us
    echo -1 > /proc/sys/kernel/sched_rt_runtime_us
    # tuntap setup
    [ -e /dev/net ] || mkdir /dev/net
    [ -e /dev/net/tun ] || mknod /dev/net/tun c 10 200
}

case "$1" in
  start|"")
      [ "$VERBOSE" = no ] || log_action_begin_msg "Initializing Axiom environment"
      setup
      [ "$VERBOSE" = no ] || log_action_end_msg $ES
      ;;
  stop)
      [ "$VERBOSE" = no ] || log_action_begin_msg "Axiom Prepare end"
      [ "$VERBOSE" = no ] || log_action_end_msg $ES
      ;;
  restart|reload|force-reload|status)
      echo "Error: argument '$1' not supported" >&2
      exit 3
      ;;
  *)
      echo "Usage: axiom-prepare start|stop" >&2
      exit 3
      ;;
esac
